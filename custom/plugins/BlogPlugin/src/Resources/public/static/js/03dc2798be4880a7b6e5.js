"use strict";(window["webpackJsonpPluginblog-plugin"]=window["webpackJsonpPluginblog-plugin"]||[]).push([[764],{764:function(e,t,a){a.r(t),a.d(t,{default:function(){return n}});let{Mixin:o}=Shopware,{Criteria:s}=Shopware.Data;var n={template:'{% block sw_blog_category_detail %}\n	<sw-page class="sw-blog-detail">\n		{% block sw_product_list_language_switch %}\n			<template #language-switch>\n				<sw-language-switch :disabled="blogCategoryId == null || undefined" :save-changes-function="saveOnLanguageChange" :abort-change-function="abortOnLanguageChange" @on-change="onChangeLanguage"/>\n			</template>\n		{% endblock %}\n		<template #smart-bar-actions>\n			<sw-button :router-link="{name: \'sw.blog.category.index\'}">\n				{{$tc(\'sw-blog-category.general.cancel\')}}\n			</sw-button>\n			<sw-button-process :isloading="isLoading" :processsuccess="processSuccess" variant="primary" @process-finish="saveFinish" @click="onClickSave">\n				{{$tc(\'sw-blog-category.general.save\')}}\n			</sw-button-process>\n		</template>\n		<template #content>\n			<sw-card-view>\n				<sw-card v-if="blogCategory">\n					<sw-text-field v-model:value="blogCategory.name" :placeholder="$tc(\'sw-blog-category.detail.placeholderName\')" :label="$tc(\'sw-blog-category.detail.labelName\')" name="name" validation="required" required :error="blogCategoryNameError"/>\n				</sw-card>\n			</sw-card-view>\n		</template>\n	</sw-page>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory"],mixins:[o.getByName("placeholder"),o.getByName("notification"),o.getByName("discard-detail-page-changes")("blogCategory")],data(){return{blogCategory:null,repository:null,isLoading:!1,processSuccess:!1}},props:{blogCategoryId:{type:String,required:!1,default:null}},metaInfo(){return{title:this.$createTitle()}},watch:{blogCategoryId(){this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){if(this.repository=this.repositoryFactory.create("blog_category"),this.blogCategoryId){this.getCategory();return}Shopware.State.commit("context/resetLanguageToDefault"),this.blogCategory=this.repository.create()},abortOnLanguageChange(){return this.repository.hasChanges(this.blogCategory)},saveOnLanguageChange(){return this.onClickSave()},onChangeLanguage(e){this.isLoading=!0,Shopware.State.commit("context/setApiLanguageId",e),this.getCategory()},getCategory(){Shopware.ExtensionAPI.publishData({id:"sw-blog-category-detail__blog_category",path:"blog-category",scope:this});let e=new s;e.addAssociation("translations"),this.repository.get(this.blogCategoryId,Shopware.Context.api,e).then(e=>{console.log("entity",e),this.blogCategory=e})},onClickSave(){this.isLoading=!0,this.repository.save(this.blogCategory).then(()=>{if(this.isLoading=!1,this.processSuccess=!0,this.createNotificationSuccess({title:this.$tc("sw-blog-category.detail.titleSaveSuccess"),message:this.$tc("sw-blog-category.detail.messageSaveSuccess",0,{name:this.blogCategory.name})}),null===this.blogCategoryId){this.$router.push({name:"sw.blog.category.detail",params:{id:this.blogCategory.id}});return}this.getCategory()}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$tc("sw-blog-category.general.somethingWentWrong"),message:e})})},saveFinish(){this.processSuccess=!1}}}}}]);